{
  "version": 3,
  "sources": ["../node_modules/node-fetch/browser.js", "../node_modules/@callum.boase/fetch/_fetch.js", "../node_modules/knack-api-helper/knack-api-helper.js", "../knack-api/knack-api-payloads.js", "../knack-api/knack-api-filters.js", "../knack-api/knack-api-calls.js", "../knack-api/knack-api-init.js", "../knack-api/knack-api-utils.js", "../index.js"],
  "sourcesContent": ["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n", "//Only load node-fetch in nodeJs environment\r\n//If we're running this file in browser, we'll use the browser's fetch API which is built-in\r\n//If bundling this module for browser usage, skip bundling node-fetch\r\n//Eg if bundling using browserify add flag \"--external node-fetch\" when running \"browserify...\"\r\n//  The bundling will assume node-fetch is already avaialble in the environment, which it will NOT be\r\n//  So the if statement ensures we don't try to use the non-existent node-fetch\r\nif(inBrowser()){\r\n    fetch = window.fetch;\r\n} else {\r\n    var fetch = require('node-fetch');\r\n}\r\n\r\nfunction inBrowser(){\r\n    try {\r\n        window.fetch;\r\n        return true\r\n    } catch (err){\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _fetch = {\r\n    \r\n    delay(ms) {\r\n        return new Promise((resolve) => setTimeout(resolve, ms));\r\n    },\r\n\r\n    tools: {\r\n        exponentialBackoff(attempt){\r\n            return Math.pow(2, attempt - 1) * 1000; //1000, 2000, 4000 etc\r\n        }\r\n    },\r\n\r\n    defaults: {\r\n\r\n        retryDelay(attempt, mostRecentErr){\r\n            if(mostRecentErr.details.response.status === 429){\r\n                return Math.pow(2, attempt - 1) * 1000; //Exponential backoff same as _fetch.tools.exponentialBackoff\r\n            } else {\r\n                return 1000;\r\n            }\r\n        },\r\n\r\n        retryOn(attempt, err){\r\n            if(err.details && err.details.response && (err.details.response.status >= 500 || err.details.response.status === 429)){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    async wrapper(url, options = {}, helperData = {}) {\r\n\r\n        try {\r\n\r\n            const response = await fetch(url, options);\r\n\r\n            const text = await response.text();\r\n\r\n            //You can only consume response body methods once\r\n            //So we get text above and then convert text to JSON if applicable\r\n            let json = null;\r\n            if(isJson(text)){\r\n                json = JSON.parse(text);\r\n            } \r\n\r\n            if(response && response.ok){\r\n                return {url, options, response, helperData, json, text}\r\n            }\r\n\r\n            let err = new Error(`Successful http request but response.ok === false. Code: ${response.status}, Text: ${text}`);\r\n            err.details = {url, options, response, helperData, json, text};\r\n            throw err;\r\n       \r\n        } catch(err) {//This runs with either the above manually thrown error, or with fetch-API generated errors\r\n            !err.details ? err.details = {url, options, helperData} : err.datails;\r\n            throw err;\r\n        }\r\n\r\n        function isJson(text){\r\n            try {\r\n                JSON.parse(text);\r\n                return true;\r\n            } catch(err){\r\n                return false;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    async one (settings = {url, options, helperData, retries, retryDelay, retryOn}) {\r\n\r\n        if(typeof settings !== 'object' || !settings.url) throw new Error('Invalid argument when calling _fetch.one. You must call _fetch.one with an object (settings), containing at-minimum: settings = {url: string}');\r\n\r\n        if (!settings.options) settings.options = {method: 'GET'};\r\n        if (settings.options && !settings.options.method) settings.options.method = 'GET';\r\n\r\n        if (!settings.retries && settings.retries !== 0) settings.retries = 5;\r\n\r\n        if(typeof settings.retryDelay !== 'function' && typeof settings.retryDelay !== 'number'){\r\n            settings.retryDelay = this.defaults.retryDelay;\r\n        }   \r\n\r\n        if (typeof settings.retryOn !== 'function'){\r\n            settings.retryOn = this.defaults.retryOn;\r\n        }\r\n    \r\n        //thanks to: https://dev.to/ycmjason/javascript-fetch-retry-upon-failure-3p6g\r\n        let mostRecentErr;\r\n\r\n        for(let i = 0; i <= settings.retries; i++){\r\n            try {\r\n\r\n                if(i > 0) {\r\n                    let retryDelay;\r\n\r\n                    if(typeof settings.retryDelay === 'function') {\r\n                        retryDelay = settings.retryDelay(i, mostRecentErr)\r\n                    } else {\r\n                        retryDelay = settings.retryDelay;\r\n                    }\r\n\r\n                    await this.delay(retryDelay);\r\n                }\r\n                return await this.wrapper(settings.url, settings.options, settings.helperData);\r\n            \r\n            } catch (err){\r\n\r\n                const isLastRetry = i === settings.retries;\r\n                if(isLastRetry) throw err;\r\n\r\n                const shouldRetry = await settings.retryOn(i, err);\r\n                if(!shouldRetry) throw err;\r\n\r\n                mostRecentErr = err;\r\n\r\n                console.log(`failed fetch ${settings.options.method} to ${settings.url}. Code: ${err.details && err.details.response ? err.details.response.status : \"\"}. Attempt ${i}. Retrying...`);\r\n            }\r\n        }\r\n    },\r\n\r\n    async many (settings = {requests, delayMs, progressCbs}) {\r\n\r\n        if(!settings.delayMs) settings.delayMs = 125;\r\n    \r\n        let promises = [];\r\n        settings.requests.forEach( (request, i) => {\r\n            const promise = (async () => {\r\n                await this.delay(i*settings.delayMs);\r\n                const fetchResult = await this.one({\r\n                    url: request.url, \r\n                    options: request.options,\r\n                    retries: request.retries, \r\n                    retryDelay: request.retryDelay,\r\n                    retryOn: request.retryOn,\r\n                    helperData: {request, delayMs: i*settings.delayMs, i},\r\n                });\r\n                progress++\r\n    \r\n                if(settings.progressCbs && settings.progressCbs.length){\r\n                    settings.progressCbs.forEach(progressCb => {\r\n                        progressCb(progress, len, fetchResult)\r\n                    });\r\n                }\r\n    \r\n                return fetchResult;\r\n            })();\r\n            promises.push(promise);\r\n        });\r\n    \r\n        const len = promises.length;\r\n        let progress = 0;\r\n    \r\n        return Promise.allSettled(promises);\r\n    }\r\n\r\n}\r\n\r\nif(typeof require != 'undefined') module.exports = _fetch;", "const _fetch = require('@callum.boase/fetch');\r\n\r\nfunction KnackAPI(config) {\r\n\r\n    checkConfig();\r\n\r\n    if(config.auth === 'view-based'){\r\n        \r\n        this.headers = {\r\n            \"X-Knack-Application-ID\": config.applicationId,\r\n            \"X-Knack-REST-API-Key\": \"knack\",\r\n            \"Authorization\": typeof config.userToken === 'string' ? config.userToken : \"\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    } else if(config.auth === 'object-based'){\r\n\r\n        this.headers = {\r\n            \"X-Knack-Application-ID\": config.applicationId,\r\n            \"X-Knack-REST-API-Key\": config.apiKey,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    }\r\n\r\n    this.urlBase = `https://api.knack.com/v1`;\r\n\r\n    this.remoteLogin = async function(settings = {email, password}){\r\n        return await _fetch.one({\r\n            url: `${this.urlBase}/applications/${this.headers['X-Knack-Application-ID']}/session`,\r\n            options: {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: settings.email,\r\n                    password: settings.password\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    this.login = async function(settings = {email, password}){\r\n        if(settings.email && settings.password){\r\n            const res = await this.remoteLogin(settings);\r\n            const token = res.json.session.user.token;\r\n            this.headers.Authorization = token;\r\n            return token;\r\n        } else {\r\n            throw new Error('You did not specify one/both of email and password in settings object. Could not log in');\r\n        }\r\n\r\n    },\r\n\r\n    this.validateSession = async function (settings = {userToken, userRoleCheck}) {\r\n\r\n        if(typeof settings.userToken !== 'string'){\r\n            throw new Error('You must provide a settings object with at least a userToken (string) to validateSession()');\r\n        }\r\n\r\n        try {\r\n      \r\n            const response = await _fetch.one({\r\n                url: `${this.urlBase}/session/token`,\r\n                options: {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Authorization': settings.userToken,\r\n                        'x-knack-application-id': this.headers['X-Knack-Application-ID']\r\n                    }\r\n                }\r\n            });\r\n      \r\n            //Will automatically error if session not valid.\r\n      \r\n            //If we get to here, it's is a real user token. Now we perform more checks.\r\n      \r\n            const session = response.json?.session;\r\n\r\n            if(!session) throw new Error('No session found');\r\n            if (session.user.status !== 'current') throw new Error('Valid user but session not current.')\r\n            if (session.user.account_status !== 'active') throw new Error('Valid user but status not active.');\r\n            if (session.user.approval_status !== 'approved') throw new Error('Valid user but approval status is not approved.');\r\n      \r\n            if (settings.userRoleCheck) {\r\n                if (!session.user.profile_keys.includes(settings.userRoleCheck)) {\r\n                    throw new Error('Valid user but does not include the specified user role.')\r\n                }\r\n            }\r\n\r\n            //All checks passed. The session is valid\r\n            return true;\r\n        \r\n        } catch (err) {\r\n            //The session is not valid\r\n            return false;\r\n        }\r\n    }, \r\n\r\n    this.url = function(settings = {scene, view, object, recordId}){\r\n        \r\n        let url = this.urlBase;\r\n\r\n        if(config.auth === 'view-based'){\r\n            url += `/pages/${settings.scene}/views/${settings.view}/records/`;\r\n        } else if (config.auth === 'object-based'){\r\n            url += `/objects/${settings.object}/records/`;\r\n        }\r\n\r\n        if(settings.recordId) url += settings.recordId;\r\n        return url;\r\n    }\r\n\r\n    this.getRetries = function(retries) {\r\n        if(typeof retries === 'number'){\r\n            return retries;\r\n        } else {\r\n            return 5;\r\n        }\r\n    }\r\n\r\n    this.setup = function(method, settings){\r\n        let url = \"\";\r\n\r\n        if(config.auth === 'view-based'){\r\n\r\n            url = this.url({\r\n                scene: settings.scene, \r\n                view: settings.view, \r\n                recordId: settings.recordId\r\n            });\r\n        \r\n        } else if (config.auth === 'object-based'){\r\n\r\n            url = this.url({\r\n                object: settings.object, \r\n                recordId: settings.recordId\r\n            });\r\n\r\n        }\r\n\r\n        const options = {\r\n            method,\r\n            headers: this.headers,\r\n        }\r\n\r\n        if(settings.body) options.body = JSON.stringify(settings.body);\r\n\r\n        const retries = this.getRetries(settings.retries);\r\n        return {url, options, retries, helperData: settings.helperData};\r\n\r\n    }\r\n\r\n    this.single = async function(method, settings){\r\n        const req = this.setup(method, settings);\r\n        return await _fetch.one(req);\r\n    }\r\n\r\n    this.many = async function(method, settings){\r\n\r\n        if(method === 'GET') return console.log('knackAPI.many is only for POST, PUT and DELETE');\r\n\r\n        const requests = [];\r\n\r\n        settings.records.forEach(record => {\r\n            const reqSettings = {\r\n                view: settings.view, \r\n                scene: settings.scene, \r\n                object: settings.object,\r\n                retries: settings.retries\r\n            }\r\n            if(method !== 'DELETE'){\r\n                reqSettings.body = record;\r\n            }\r\n            if(method !== 'POST'){\r\n                reqSettings.recordId = record.id;\r\n            }\r\n            requests.push(this.setup(method, reqSettings));\r\n        });\r\n\r\n        if(settings.resultsReport) this.tools.manyResultsReport.remove(settings.resultsReport); \r\n\r\n        const progressCbs = this.progressCbsSetup(settings); \r\n\r\n        const results = await _fetch.many({requests, delayMs: 125, progressCbs});\r\n        results.settings = settings;\r\n        results.summary = this.tools.manyResultsReport.calc(results);\r\n\r\n        if(settings.resultsReport){\r\n            this.tools.manyResultsReport.create(settings.resultsReport, results);\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    this.progressCbsSetup = function(settings){\r\n\r\n        let progressCbs = [];\r\n        if(settings.progressBar){\r\n            this.tools.progressBar.create(settings.progressBar);\r\n            progressCbs.push((progress, len, fetchResult) => {\r\n                this.tools.progressBar.update(settings.progressBar.id, progress, len);\r\n            });\r\n        }\r\n\r\n        if(settings.progressCbs && settings.progressCbs.length){\r\n            settings.progressCbs.forEach(progressCb => progressCbs.push(progressCb));\r\n        }\r\n\r\n        return progressCbs;\r\n\r\n    }\r\n\r\n    this.get = async function(settings = {view, scene, object, recordId, helperData}){\r\n        return await this.single('GET', settings);\r\n    }\r\n\r\n    this.post = async function(settings = {view, scene, object, body, helperData, retries}){\r\n        return await this.single('POST', settings);\r\n    }\r\n\r\n    this.put = async function(settings = {recordId, view, scene, object, body, helperData, retries}){\r\n        return await this.single('PUT', settings);\r\n    }\r\n\r\n    this.delete = async function(settings = {recordId, view, scene, object, helperData, retries}){\r\n        return await this.single('DELETE', settings);\r\n    }\r\n\r\n\r\n    this.getMany = async function(settings = {view, scene, object, filters, rowsPerpage, startAtPage, maxRecordsToGet, helperData}, currentPage = 1, final = {records: [], pages: []}){\r\n\r\n        const req = this.setup('GET', settings);\r\n\r\n        if(currentPage === 1){//Only on the first run, not subequent runs\r\n            if(settings.startAtPage > 1) currentPage = settings.startAtPage;\r\n        }\r\n\r\n        const maxRecordsToGet = settings.maxRecordsToGet > 0 ? settings.maxRecordsToGet : Infinity;\r\n        \r\n        let rowsPerPage = settings.rowsPerPage ? settings.rowsPerPage : 1000;\r\n\r\n        req.url += `?page=${currentPage}&rows_per_page=${rowsPerPage}`;\r\n\r\n        if(settings.format) req.url += `&format=${settings.format}`;\r\n        if(settings.filters) req.url += `&filters=${JSON.stringify(settings.filters)}`;\r\n\r\n        const result = await _fetch.one(req);\r\n\r\n        final.pages.push(result);\r\n        result.json.records.map(record => final.records.push(record));\r\n        final.helperData = settings.helperData;\r\n\r\n        if(final.records.length > maxRecordsToGet){\r\n            final.records = final.records.splice(0,maxRecordsToGet);\r\n        }\r\n\r\n        if(final.records.length < maxRecordsToGet && result.json.current_page < result.json.total_pages){\r\n            return await this.getMany(settings, result.json.current_page + 1, final);\r\n        } else {\r\n            return final;\r\n        }\r\n    }\r\n\r\n    this.putMany = async function(settings = {records, view, scene, object, helperData, retries, progressBar, progressCbs, resultsReport}){\r\n        return await this.many('PUT', settings);\r\n    }\r\n\r\n    this.postMany = async function (settings = {records, view, scene, object, helperData, retries, progressBar, progressCbs, resultsReport}){\r\n        return await this.many('POST', settings);\r\n    }\r\n\r\n    this.deleteMany = async function(settings = {records, view, scene, object, helperData, retries, progressBar, progressCbs, resultsReport}){\r\n        return await this.many('DELETE', settings);\r\n    }\r\n\r\n    //API call to get data from a report view like pivot table, bar chart or similar. Only works with view-based auth\r\n    this.getFromReportView = async function(settings = {view, scene, sceneRecordId, helperData, retries}){\r\n\r\n        //Check for errors in config, since it's a bit different to other API calls\r\n        if (config.auth !== 'view-based') throw new Error('getFromReportView() only works when using view-based auth');\r\n        if (!settings.view || !settings.scene) throw new Error('getFromReportView() requires a view and scene. You did not specify one or both.');\r\n        if (settings.recordId) throw new Error('getFromReportView() does not support recordId. Specify settings.sceneRecordId if you are trying to load a report on a child page that has the data source of \"this page\\'s record\" or similar.');\r\n\r\n        //Build the URL, which has a different format to other API calls\r\n        //All reports API calls take format of /pages/{scene}/views/{view}/report\r\n        //If the report is on a child page with data source of \"this page's record\", then we need to add query string of ?{sceneSlug}_id={sceneRecordId} so Knack knows what record to filter records by\r\n        //Eg /pages/scene_1/views/view_1/report?dashboard_id=63e1bfe1a978400745e3a736\r\n        let url = `${this.urlBase}/scenes/${settings.scene}/views/${settings.view}/report`;\r\n        if(settings.sceneRecordId) {\r\n            const sceneSlug = await this.getSceneSlug(settings.scene);\r\n            url += `?${sceneSlug}_id=${settings.sceneRecordId}`\r\n        }\r\n\r\n        //Build the _fetch request object\r\n        const req = {\r\n            url,\r\n            options: {\r\n                method: 'GET',\r\n                headers: this.headers\r\n            },\r\n            retries: this.getRetries(settings.retries),\r\n            helperData: settings.helperData\r\n        }\r\n\r\n        //Run the API call.\r\n        return await _fetch.one(req);\r\n\r\n    }\r\n\r\n    this.tools = {\r\n        progressBar: {\r\n\r\n            html(id){\r\n                return $(`\r\n                    <div id=\"${id}\" style=\"margin-bottom: 10px;\">\r\n                        <span class=\"before-progress-bar\" style=\"margin-right: 5px;\"><em><strong>Processing records</em></strong></span>\r\n                        <progress id=\"progressBar\" value=\"0\" max=\"100\"></progress>\r\n                        <span class=\"after-progress-bar\" style=\"margin-left: 5px;\" id=\"progressText\">Initialising...</span>\r\n                    </div>\r\n                `);\r\n            },\r\n\r\n            update(id, progress, len){\r\n                $(`#${id} #progressBar`).val(Math.round(progress / len * 100));\r\n                $(`#${id} #progressText`).text(`${progress}/${len}`);\r\n            },\r\n\r\n            create(progressBar){\r\n                $(`#${progressBar.id}`).remove();\r\n                if(progressBar.insertAfter){\r\n                    this.html(progressBar.id).insertAfter(progressBar.insertAfter);\r\n                } else if(progressBar.insertBefore){\r\n                    this.html(progressBar.id).insertBefore(progressBar.insertBefore);\r\n                } else if(progressBar.appendTo){\r\n                    this.html(progressBar.id).appendTo(progressBar.appendTo);\r\n                } else if(progressBar.prependTo){\r\n                    this.html(progressBar.id).prependTo(progressBar.prependTo);\r\n                } else {\r\n                    console.log('Invalid progress bar location');\r\n                } \r\n            }\r\n        },\r\n\r\n        manyResultsReport: {\r\n\r\n            calc(results){\r\n                const fulfilled = results.reduce((acc, curr) => {\r\n                    if(curr.status === 'fulfilled') acc++;\r\n                    return acc;\r\n                },0);\r\n                const rejected = results.reduce((acc, curr) => {\r\n                    if(curr.status === 'rejected') acc++;\r\n                    return acc;\r\n                },0);\r\n                const errors = results.filter(result => {\r\n                    if(result.status !== 'fulfilled'){\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                })\r\n                return {fulfilled, rejected, errors};\r\n            },\r\n\r\n            html(id, results){\r\n                const summary = this.calc(results);\r\n                return $(`\r\n                    <div id=${id}>\r\n                        <p><strong>Finished processing</strong></p>\r\n                        <p>Summary:</p>\r\n                        <p>\r\n                            <ul>\r\n                                <li>Failed: ${summary.rejected}</li>\r\n                                <li>Succeeded: ${summary.fulfilled}</li>\r\n                            </ul>\r\n                        </p>\r\n                    </div>\r\n                `) \r\n            },\r\n\r\n            create(resultsReport, results){\r\n                if(resultsReport.insertAfter){\r\n                    this.html(resultsReport.id, results).insertAfter(resultsReport.insertAfter);\r\n                } else if(resultsReport.insertBefore){\r\n                    this.html(resultsReport.id, results).insertBefore(resultsReport.insertBefore);\r\n                } else if(resultsReport.appendTo){\r\n                    this.html(resultsReport.id, results).appendTo(resultsReport.appendTo);\r\n                } else if(resultsReport.prependTo){\r\n                    this.html(resultsReport.id, results).prependTo(resultsReport.prependTo);\r\n                } else {\r\n                    console.log('Invalid summary location');\r\n                } \r\n            },\r\n\r\n            remove(resultsReport){\r\n                $(`#${resultsReport.id}`).remove();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    //Utility function to get the current slug of a scene (eg dashboard) based on it's key (eg scene_21) using the Knack API\r\n    this.getSceneSlug = async function(sceneKey) {\r\n        const appDataUrl = `${this.urlBase}/applications/${this.headers['X-Knack-Application-ID']}`;\r\n\r\n        const appData = await _fetch.one({\r\n            url: appDataUrl,\r\n            options: {\r\n                method: 'GET',\r\n            }\r\n        });\r\n\r\n        const scenes = appData.json.application.scenes;\r\n\r\n        const scene = scenes.find(scene => scene.key === sceneKey);\r\n\r\n        if(!scene) throw new Error(`Scene with key ${sceneKey} not found, when trying to find corresponding slug (url). Could not continue.`);\r\n\r\n        const slug = scene.slug;\r\n        if(!slug) throw new Error(`Scene with key ${sceneKey} found, but no slug (url) found. Could not continue.`);\r\n\r\n        return slug;\r\n\r\n    }\r\n\r\n\r\n    function checkConfig(){\r\n\r\n        if(!config) throw new Error('KnackAPI config settings object not found');\r\n\r\n        if(!config.auth) throw new Error('KnackAPI.auth configuration not found');\r\n\r\n        if(config.auth !== 'object-based' && config.auth !== 'view-based') {\r\n            throw new Error(`KnackAPI.auth invalid - should be \"view-based\" or \"object-based\" but got \"${config.auth}\"`);\r\n        }\r\n\r\n        if(!config.applicationId) throw new Error(`KnackAPI.applicationId not found`);\r\n\r\n        if(config.auth === 'object-based' && !config.apiKey) throw new Error('Object-based auth selected but did not find an API key');\r\n\r\n        try {\r\n            if(config.auth === 'object-based' && Knack) {\r\n                console.log(`\r\n                    Warning! Object-based auth selected but it looks like you are running code in the Knack Javascript area. \r\n                    We strongly recommend you use view-based auth instead;\r\n                `)\r\n            }\r\n        } catch(err) {\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = KnackAPI;", "// function to prepare API Payload post many\r\n\r\n// Put\r\nfunction createApiPayloadPutSingle(sceneKey, viewKey, record_id, recordData) {\r\n    const payload = {\r\n        scene: sceneKey,\r\n        view: viewKey,\r\n        recordId: record_id,\r\n        body: recordData,\r\n    }\r\n    return payload\r\n}\r\nfunction createApiPayloadPutMany(sceneKey, viewKey, records, progress) {\r\n\r\n    // scene_1709/views/view_4124\r\n\r\n    const payload = {\r\n        scene: sceneKey,\r\n        view: viewKey,\r\n        records: records,\r\n    }\r\n    // if (progress) { payload.progressCbs: progress[0].map(callback => (progress, len, fetchResult) => callback(progress, len, fetchResult, progress[1])) }\r\n    return payload\r\n\r\n}\r\n\r\n\r\n// Post\r\nfunction createApiPayloadPostSingle(sceneKey, viewKey, record) {\r\n\r\n    const payload = {\r\n        scene: sceneKey,\r\n        view: viewKey,\r\n        body: record,\r\n    }\r\n    return payload\r\n\r\n}\r\nfunction createApiPayloadPostMany(sceneKey, viewKey, records) {\r\n\r\n    // scene_1704/views/view_4122\r\n\r\n    const payload = {\r\n        scene: sceneKey,\r\n        view: viewKey,\r\n        records: records\r\n    }\r\n    return payload\r\n\r\n}\r\n//get\r\nfunction createApiPayloadGetSingle(sceneKey, viewKey, record_id) {\r\n\r\n    const payload = {\r\n        scene: sceneKey,\r\n        view: viewKey,\r\n        recordId: record_id,\r\n    }\r\n    return payload\r\n\r\n}\r\nfunction createApiPayloadGetMany(sceneKey, viewKey, filters, parentRecord, format) {\r\n\r\n    if (parentRecord) {\r\n        var url = `https://api.knack.com/v1/pages/${sceneKey}/views/${viewKey}/records?${parentRecord.name}_id=${parentRecord.id}`\r\n        if (filters) { // Check if filters is not empty\r\n            url += '&filters=' + encodeURIComponent(JSON.stringify(filters)); // Use & instead of ?\r\n        }\r\n        // console.log('params', sceneKey, viewKey, filters , parentRecord , format)\r\n        // console.log('payload', url)\r\n        return url\r\n\r\n    } else {\r\n\r\n        if (!format) { format = 'both' }\r\n        const payload = {\r\n            scene: sceneKey,\r\n            view: viewKey,\r\n            format: format,\r\n        }\r\n        if (filters) { payload.filters = filters }\r\n        // console.log('params', sceneKey, viewKey, filters , parentRecord , format)\r\n        // console.log('payload', payload)\r\n        return payload\r\n    }\r\n}\r\n//delete\r\nfunction createApiPayloadDeleteSingle(sceneKey, viewKey, record) {\r\n    const payload = {\r\n        recordId: record.id,\r\n        scene: sceneKey,\r\n        view: viewKey,//view_21 is a view with a delete link like a grid or details view\r\n    }\r\n    return payload\r\n}\r\n\r\n//report\r\nfunction createApiPayloadGetFromReport(sceneKey, viewKey, filters = {}) {\r\n\r\n    if (filters) {\r\n\r\n        const baseUrl = `https://api.knack.com/v1/scenes/${sceneKey}/views/${viewKey}/report/0`\r\n        const apiUrl = baseUrl + '?filters=' + encodeURIComponent(JSON.stringify(filters));\r\n        return { url: apiUrl, filters: true }\r\n\r\n    } else {\r\n\r\n        const payload = {\r\n            scene: sceneKey,\r\n            view: viewKey,\r\n        }\r\n        return payload\r\n\r\n    }\r\n}\r\n\r\nexport const payloads = {\r\n    // get\r\n    getSingle: (sceneKey, viewKey, record_id) => createApiPayloadGetSingle(sceneKey, viewKey, record_id),\r\n    getMany: (sceneKey, viewKey, filters, parentRecord, format) => createApiPayloadGetMany(sceneKey, viewKey, filters, parentRecord, format),\r\n    // post\r\n    postSingle: (sceneKey, viewKey, record) => createApiPayloadPostSingle(sceneKey, viewKey, record),\r\n    postMany: (sceneKey, viewKey, records) => createApiPayloadPostMany(sceneKey, viewKey, records),\r\n    // delete\r\n    deleteSingle: (sceneKey, viewKey, record) => createApiPayloadDeleteSingle(sceneKey, viewKey, record),\r\n    // put\r\n    putSingle: (sceneKey, viewKey, record_id, recordData) => createApiPayloadPutSingle(sceneKey, viewKey, record_id, recordData),\r\n    putMany: (sceneKey, viewKey, records, progress) => createApiPayloadPutMany(sceneKey, viewKey, records, progress)\r\n};", "\r\nfunction createFilters(condition) {\r\n    return {\r\n        \"match\": condition,\r\n        \"rules\": []\r\n    }\r\n}\r\n\r\nfunction Commonfilters(field_key) {\r\n\r\n    return {\r\n        isDuringTheCurrentMonth: {\r\n            field: field_key,\r\n            operator: \"is during the current\",\r\n            type: \"month\",\r\n        },\r\n        isDuringThePreviousMonth: {\r\n            field: field_key,\r\n            operator: \"is during the previous\",\r\n            range: \"1\",\r\n            type: \"months\",\r\n        },\r\n        isDuringTheNextMonth: {\r\n            field: field_key,\r\n            operator: \"is during the next\",\r\n            range: \"1\",\r\n            type: \"months\",\r\n        },\r\n        isBeforeThePreviousMonth: {\r\n            field: field_key,\r\n            operator: \"is before the previous\",\r\n            range: \"1\",\r\n            type: \"months\",\r\n        },\r\n    }\r\n\r\n}\r\n\r\nexport const filters = {\r\n    create: (condition) => createFilters(condition),\r\n    common: (field_key) => Commonfilters(field_key)\r\n}", "import KnackAPI from 'knack-api-helper';\r\nimport { knackApiInit } from './knack-api-init.js'\r\n\r\n// get\r\nasync function knackApiViewGetSingle(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const response = await knackAPI.get(payload)\r\n        console.log(\"api call completed\")\r\n        const responseJson = response.json\r\n        return responseJson\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function knackApiViewGetMany(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const resRecords = await knackAPI.getMany(payload);\r\n        console.log(\"api call completed\")\r\n        return resRecords.records\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function knackApiViewGetManyParentRecord(payload) {\r\n\r\n    const basePayload = payload\r\n    var iteration = 1\r\n    var iterationUrl = `&page=${iteration}&rows_per_page=1000`\r\n    var currentPayload = basePayload + iterationUrl\r\n    var headers = {\r\n        'Authorization': Knack.getUserToken(),\r\n        'X-Knack-REST-API-Key': 'knack',\r\n        'X-Knack-Application-Id': Knack.application_id,\r\n        'Content-Type': 'application/json'\r\n    };\r\n    var response = {}\r\n\r\n    var responseJson = await fetchAPIcall(currentPayload, headers)\r\n    response = { ...responseJson }\r\n\r\n    if (responseJson.total_records > 1000) {\r\n        const numIteration = responseJson.total_pages\r\n        for (var i = 2; i <= numIteration; i++) {\r\n            var iteration = i\r\n            var iterationUrl = `&page=${iteration}&rows_per_page=1000`\r\n            var currentPayload = basePayload + iterationUrl\r\n            responseJson = await fetchAPIcall(currentPayload, headers)\r\n            response.records = [...response.records, ...responseJson.records];\r\n        }\r\n    }\r\n\r\n    return response\r\n\r\n}\r\n\r\n// post\r\nasync function knackApiViewPostMany(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const responses = await knackAPI.postMany(payload);\r\n        if (responses.summary.rejected > 0) {\r\n            responses.summary.errors.forEach(err => {\r\n               console.log(JSON.stringify(err.reason));\r\n            })\r\n        }\r\n        console.log(\"api call completed\")\r\n        return responses\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function knackApiViewPostSingle(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const response = await knackAPI.post(payload);\r\n        const recordCreated = response.json;\r\n        console.log(\"api call completed\")\r\n        return recordCreated\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\n// put\r\nasync function knackApiViewPutSingle(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const response = await knackAPI.put(payload);\r\n        const responseJson = await response.json\r\n        console.log(\"api call completed\")\r\n        return responseJson\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function knackApiViewPutMany(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const responses = await knackAPI.putMany(payload);\r\n        if (responses.summary.rejected > 0) {\r\n            res.summary.errors.forEach(err => {\r\n                errorHandler(err.reason);\r\n            })\r\n        }\r\n        console.log(\"api call completed\")\r\n        return responses\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\n// delete\r\nasync function knackApiViewDeleteSingle(payload) {\r\n    const knackAPI = await knackApiInit()\r\n    console.log(\"api call started\")\r\n    try {\r\n        const response = await knackAPI.delete(payload)\r\n        console.log(\"api call completed\")\r\n        return response\r\n    } catch (err) {\r\n        console.log(\"api call failed\", err)\r\n        return null;\r\n    }\r\n}\r\n\r\n// report\r\nasync function knackApiViewGetFromReport(payload) {\r\n\r\n    if (payload.filters) {\r\n\r\n        console.log(\"api call made from url\")\r\n\r\n        var headers = {\r\n            'Authorization': Knack.getUserToken(),\r\n            'X-Knack-REST-API-Key': 'knack',\r\n            'X-Knack-Application-Id': Knack.application_id,\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        var responseJson = await fetchAPIcall(payload.url, headers)\r\n        var records = responseJson.report.records\r\n        return records\r\n\r\n    } else {\r\n\r\n        const knackAPI = new KnackAPI({\r\n            auth: 'view-based',\r\n            applicationId: Knack.application_id,\r\n            userToken: Knack.getUserToken()\r\n        });\r\n\r\n        console.log(\"api call started\")\r\n\r\n        try {\r\n\r\n            const reportDataResponse = await knackAPI.getFromReportView(payload)\r\n            console.log(\"api call completed\")\r\n            const response = reportDataResponse.json.reports[0].records\r\n            return response\r\n\r\n        } catch (err) {\r\n            console.log(\"api call failed\", err)\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n// uplaod file/image asset\r\nasync function knackUploadAsset(file) {\r\n\r\n    var url = `https://api.knack.com/v1/applications/${Knack.application_id}/assets/file/upload`\r\n\r\n\r\n\r\n    const formData = new FormData();\r\n    formData.append('files', file)\r\n\r\n    var options = {\r\n        'method': 'POST',\r\n        'headers': {\r\n            'X-Knack-REST-API-Key': 'knack',\r\n            'X-Knack-Application-Id': Knack.application_id,\r\n        },\r\n        'body': formData\r\n    };\r\n\r\n    var response = await fetch(url, options);\r\n    console.log(response)\r\n    var result = await response.json()\r\n    console.log(result)\r\n    return { id: result.id, url: result.public_url }\r\n\r\n}\r\n\r\nasync function fetchAPIcall(payload, headers) {\r\n    console.log(\"api call started\")\r\n    try {\r\n        const response = await fetch(payload, {\r\n            method: 'GET',\r\n            headers,\r\n        });\r\n        const responseJson = await response.json();\r\n        console.log(\"api call completed\")\r\n        return responseJson\r\n    } catch (err) {\r\n        console.log(\"api call failed\")\r\n        console.log(\"err\", err)\r\n        return err\r\n    }\r\n}\r\n\r\nexport const calls = {\r\n    // get\r\n    getSingle: (payload) => knackApiViewGetSingle(payload),\r\n    getMany: (payload) => knackApiViewGetMany(payload),\r\n    getManyParentRecord: (payload) => knackApiViewGetManyParentRecord(payload),\r\n    // post\r\n    postSingle: (payload) => knackApiViewPostSingle(payload),\r\n    postMany: (payload) => knackApiViewPostMany(payload),\r\n    //put\r\n    putMany: (payload) => knackApiViewPutMany(payload),\r\n    putSingle: (payload) => knackApiViewPutSingle(payload),\r\n    // delete\r\n    deleteSingle: (payload) => knackApiViewDeleteSingle(payload),\r\n\r\n}", "import KnackAPI from 'knack-api-helper';\r\n\r\nexport async function knackApiInit() {\r\n\r\n    const runEnv = process.env.KNACK_API_RUNENV\r\n\r\n    if (runEnv === 'browser') {\r\n        return new KnackAPI({\r\n            auth: 'view-based',\r\n            applicationId: Knack.application_id,\r\n            userToken: Knack.getUserToken()\r\n        });\r\n    }\r\n\r\n    if (runEnv === 'server') {\r\n        const userToken = await knackLogin()\r\n        return new KnackAPI({\r\n            auth: 'view-based',\r\n            applicationId: process.env.KNACK_APP_ID,\r\n            userToken: userToken\r\n        });\r\n    }\r\n}\r\n\r\n// login\r\n\r\nasync function knackLogin() {\r\n\r\n    //Initialize without a user token\r\n    const knackAPI = new KnackAPI({\r\n        auth: 'view-based',\r\n        applicationId: process.env.KNACK_APP_ID,\r\n    });\r\n\r\n    //Now we remotely login to Knack to obtain a user token & append it to knackAPI\r\n    try {\r\n        return await knackAPI.login({\r\n            email: process.env.KNACK_API_LOGIN,\r\n            password: process.env.KNACK_API_PASSWORD\r\n        });\r\n\r\n        //Now you can run knackAPI methods authenticated as the user you logged in as!\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}", "export const utils = {\r\n    isoTo_MMDDYYYY: (isoDate) => isoDatestoKnackDatesMMDDYYYY (isoDate),\r\n    isoTo_DDMMYYYY : (isoDate) => isoDatestoKnackDatesDDMMYYYY (isoDate)\r\n}\r\n\r\nfunction isoDatestoKnackDatesMMDDYYYY (isoDate) {\r\n    isoDate = new Date(isoDate)\r\n    return  {\r\n        date: isoDate.toLocaleDateString('en-US'), // Convert to \"MM/DD/YYYY\" format\r\n        // iso_timestamp: item.creationTime,\r\n        hours: ((isoDate.getUTCHours() % 12) || 12).toString().padStart(2, '0'),\r\n        minutes: isoDate.getUTCMinutes().toString().padStart(2, '0'),\r\n        am_pm: isoDate.getUTCHours() >= 12 ? 'PM' : 'AM',\r\n        // unix_timestamp: isoDate.getTime(),\r\n        // timestamp: isoDate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n      }\r\n\r\n}\r\n\r\nfunction isoDatestoKnackDatesDDMMYYYY (isoDate) {\r\n    isoDate = new Date(isoDate)\r\n    return  {\r\n        date: isoDate.toLocaleDateString('en-GB'), // Convert to \"MM/DD/YYYY\" format\r\n        // iso_timestamp: item.creationTime,\r\n        hours: ((isoDate.getUTCHours() % 12) || 12).toString().padStart(2, '0'),\r\n        minutes: isoDate.getUTCMinutes().toString().padStart(2, '0'),\r\n        am_pm: isoDate.getUTCHours() >= 12 ? 'PM' : 'AM',\r\n        // unix_timestamp: isoDate.getTime(),\r\n        // timestamp: isoDate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n      }\r\n\r\n}", "import { payloads } from \"./knack-api/knack-api-payloads.js\";\r\nimport { filters } from \"./knack-api/knack-api-filters.js\";\r\nimport { calls } from \"./knack-api/knack-api-calls.js\";\r\nimport { utils } from \"./knack-api/knack-api-utils.js\";\r\n\r\nexport const knackApi = {\r\n    filters: filters,\r\n    payloads: payloads,\r\n    calls: calls,\r\n    utils: utils\r\n}"],
  "mappings": "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",
  "names": ["require_browser", "__commonJSMin", "exports", "module", "getGlobal", "globalObject", "require_fetch", "__commonJSMin", "exports", "module", "inBrowser", "fetch", "_fetch", "ms", "resolve", "attempt", "mostRecentErr", "err", "url", "options", "helperData", "response", "text", "json", "isJson", "settings", "i", "retryDelay", "promises", "request", "promise", "fetchResult", "progress", "progressCb", "len", "__require", "require_knack_api_helper", "__commonJSMin", "exports", "module", "_fetch", "KnackAPI", "config", "checkConfig", "settings", "token", "session", "url", "retries", "method", "options", "req", "requests", "record", "reqSettings", "progressCbs", "results", "progress", "len", "fetchResult", "progressCb", "currentPage", "final", "maxRecordsToGet", "rowsPerPage", "result", "sceneSlug", "id", "progressBar", "fulfilled", "acc", "curr", "rejected", "errors", "summary", "resultsReport", "sceneKey", "appDataUrl", "scene", "slug", "createApiPayloadPutSingle", "sceneKey", "viewKey", "record_id", "recordData", "createApiPayloadPutMany", "records", "progress", "createApiPayloadPostSingle", "record", "createApiPayloadPostMany", "createApiPayloadGetSingle", "createApiPayloadGetMany", "filters", "parentRecord", "format", "url", "payload", "createApiPayloadDeleteSingle", "payloads", "sceneKey", "viewKey", "record_id", "createApiPayloadGetSingle", "filters", "parentRecord", "format", "createApiPayloadGetMany", "record", "createApiPayloadPostSingle", "records", "createApiPayloadPostMany", "createApiPayloadDeleteSingle", "recordData", "createApiPayloadPutSingle", "progress", "createApiPayloadPutMany", "createFilters", "condition", "Commonfilters", "field_key", "filters", "import_knack_api_helper", "import_knack_api_helper", "knackApiInit", "runEnv", "KnackAPI", "userToken", "knackLogin", "knackAPI", "err", "knackApiViewGetSingle", "payload", "knackAPI", "knackApiInit", "response", "err", "knackApiViewGetMany", "resRecords", "knackApiViewGetManyParentRecord", "basePayload", "iteration", "iterationUrl", "currentPayload", "headers", "responseJson", "fetchAPIcall", "numIteration", "i", "knackApiViewPostMany", "responses", "knackApiViewPostSingle", "recordCreated", "knackApiViewPutSingle", "knackApiViewPutMany", "knackApiViewDeleteSingle", "fetchAPIcall", "payload", "headers", "responseJson", "err", "calls", "knackApiViewGetSingle", "knackApiViewGetMany", "knackApiViewGetManyParentRecord", "knackApiViewPostSingle", "knackApiViewPostMany", "knackApiViewPutMany", "knackApiViewPutSingle", "knackApiViewDeleteSingle", "utils", "isoDate", "isoDatestoKnackDatesMMDDYYYY", "isoDatestoKnackDatesDDMMYYYY", "knackApi", "filters", "payloads", "calls", "utils"]
}
